一．Spring 
1.什么是Spring？ 
Spring是一个轻量级的开源框架，是为解决企业应用开发的复杂性而创建的。而在我的理解中，Spring 的主要就解决了两件事情（当然它还解决了数据访问、远程调用、单元测试等问题），分别对应 Spring 的两个设计思想 IOC 和 AOP：
2.为什么使用Spring？
1）方便解耦，简化开发
通过Spring提供的IOC容器，可以使对象之间的依赖关系交由Spring进行控制，避免硬编码所造成的过度程序耦合。
2）AOP编程的支持
通过AOP功能，方便进行面向切面的变成，如性能监测、事物管理、日志记录等
3）声明事务的支持
4）方便集成各种优秀框架
5）降低Java EE API的使用难度
如对JDBC、JavaMail、远程调用等提供了简便封装
二．
SpringMVC
1.什么是SpringMVC？
1）Spring-mvc框架是spring的一个子模块，实现了mvc的架构，使开发mvc架构的应用变得简单。
2）Spring-mvc封装了通用的功能代码。提高了程序员的开发效率
2.SpringMVC工作流程：
第一步：发起请求到前端控制器(DispatcherServlet)
第二步：前端控制器请求HandlerMapping查找Handler可以根据xml配置、注解进行查找
第三步：处理器映射器HandlerMapping向前端控制器返回Handler
第四步：前端控制器调用处理器适配器去执行Handler
第五步：处理器适配器去执行Handler
第六步：Handler执行完成给适配器返回ModelAndView
第七步：处理器适配器向前端控制器返回ModelAndView。ModelAndView是springmvc框架的一个底层对象，包括 Model和view
第八步：前端控制器请求视图解析器去进行视图解析，根据逻辑视图名解析成真正的视图(jsp)
第九步：视图解析器向前端控制器返回View
第十步：前端控制器进行视图渲染。视图渲染将模型数据(在ModelAndView对象中)填充到request域
第十一步：前端控制器向用户响应结果
3.核心：Spring的web框架围绕DispatcherServlet [ 调度Servlet ] 设计的。
总结： SpringMVC 本质上还是在使用Servlet处理，并在其基础上进行了封装简化了开发流程，提高易用性、并使用程序逻辑结构变得更清晰
三．MyBatis
1.理解什么是MyBatis？
MyBatis 是支持普通 SQL 查询，存储过程和高级映射的优秀持久层框架。 MyBatis 消除了几乎所有的 JDBC 代码和参数的手工设置以及对结果集的检索。 MyBatis 可以使用简单的XML 或注解用于配置和原始映射，将接口和 Java 的 POJO（ Plain Old Java Objects，普通的Java 对象）映射成数据库中的记录。
2.MyBatis的执行流程
1）MyBatis配置文件，包括MyBatis全局配置文件和MyBatis映射文件，其中全局配置文件配置了数据源、事务等信息；映射文件配置了SQL执行相关的信息。
2）MyBatis通过读取配置文件信息，构造出SqlSessionFactory，即会话工厂。
3）通过SqlSessionFactory，可以创建SqlSession即会话。Mybatis是通过SqlSession来操作数据库的。
4）SqlSession本身不能直接操作数据库，它是通过底层的Executor执行器来操作数据库的。Executor接口有两个实现类，一个是普通执行器，一个是缓存执行器（默认）。
5）Executor执行器要处理的SQL信息是封装到一个底层对象MappedStatement中。该对象包括：SQL语句、输入参数映射信息、输出结果集映射信息。其中输入参数和输出结果的映射类型包括Java的简单类型、HashMap集合对象、POJO对象类型。

